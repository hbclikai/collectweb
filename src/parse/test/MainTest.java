package parse.test;

import java.util.List;

import org.apache.commons.codec.DecoderException;

import parse.bean.AbstractMessage;
import parse.bean.MessageB0;
import parse.parser.RawBytesChecker;
import parse.parser.RawBytesParser;
import parse.utils.CodecUtils;

import com.sun.org.apache.xerces.internal.impl.dv.util.Base64;
import com.sun.org.apache.xml.internal.security.exceptions.Base64DecodingException;

public class MainTest {
	public static void main(String[] args) throws DecoderException,
			Base64DecodingException {
		// 1.--------------------------------------------------------------实时数据----------------------------------------------------------------------------------------------------------------------------
		// 1.hex型的原始数据
		String rawString1 = ""
				// -------------------------------头部(18字节)-------------------------------
				+ "68" // 起始字符:[68]
				+ "AA 03 AA 03" // 长度L:[AA 03 AA 03]-->234(总长度=234+8=242)
				+ "68" // 起始字符:[68]
				+ "CA" // 控制域C [CA]
				+ "00 10" // 行政区划码A1 [0010]-->1000
				+ "01 03" // 终端地址A2 [0100]-->1
				+ "01" // 主站地址和标志A3 [01]
				+ "B0" // 应用层功能码 [B0]-->176
				+ "62" // 帧序列域 [62]
				+ "20 01 1F 00" // 数据单元标识:[01 01 10 00]-->PN,FN(前2位是采集点号, 后2位可以忽略)
				
				//-------------------------------第1组数据------------------------------------
				+ "10 20 10 02 18" // r1 终端抄表时间[10 20 10 02 18] --> 18-02-10 20:10	(A15:年月日时分,没有秒)
				+ "11 12 13" // r2 当前总有功功率[00 00 00] --> 0 kW	(A9:79.9999正负)
				+ "11 12 14" // r3 当前A相有功功率[00 00 00] --> 0 kW
				+ "11 12 15" // r4 当前B相有功功率[00 00 00] --> 0 kW
				+ "11 12 16" // r5 当前C相有功功率[00 00 00] --> 0 kW
				+ "00 11 12" // r6 当前总无功功率[00 00 00] --> 0 kvar
				+ "00 11 13" // r7 当前A相无功功率[00 00 00] --> 0 kvar
				+ "00 11 14" // r8 当前B相无功功率[00 00 00] --> 0 kvar
				+ "00 11 15" // r9 当前C相无功功率[00 00 00] --> 0 kvar
				+ "23 34" // r10 当前总功率因数[00 10] --> 100 %		(A5:799.9正负)
				+ "23 35" // r11 当前A相功率因数[00 10] --> 100 %
				+ "23 36" // r12 当前B相功率因数[00 10] --> 100 %
				+ "23 37" // r13 当前C相功率因数[00 10] --> 100 %
				+ "01 23" // r14 当前A相电压[58 22] --> 225.8 V	(A7: 999.9)
				+ "01 24" // r15 当前B相电压[00 00] --> 0 V
				+ "01 25" // r16 当前C相电压[00 00] --> 0 V
				+ "01 22 34" // r17 当前A相电流[00 00 00] --> 0 A		(A25:799.999正负)
				+ "01 22 35" // r18 当前B相电流[00 00 00] --> 0 A
				+ "01 22 36" // r19 当前C相电流[00 00 00] --> 0 A
				+ "56 71" // r20 A相电压相位角[00 00]		(A5:799.9正负)
				+ "56 72" // r21 B相电压相位角[00 00]
				+ "56 73" // r22 C相电压相位角[00 00]
				+ "56 74" // r23 A相电流相位角[00 00]
				+ "56 75" // r24 B相电流相位角[00 00]
				+ "56 76" // r25 C相电流相位角[00 00]
				+ "12 34 56 78 90" // r26 当前正向有功总电能示值[00 00 00 00 00] --> 0 kWh		(A14:999999.9999)
				+ "12 34 56 78 91" // r27 当前反向有功总电能示值[00 00 00 00 00] --> 0 kWh
				
				//-------------------------------第2组数据------------------------------------
				+ "15 20 10 02 18" // r1 终端抄表时间[51 20 10 02 18] --> 18-02-10 20:51	(A15:年月日时分,没有秒)
				+ "22 22 22" // r2 当前总有功功率[00 00 00] --> 0 kW	(A9:79.9999正负)
				+ "11 12 14" // r3 当前A相有功功率[00 00 00] --> 0 kW
				+ "11 12 15" // r4 当前B相有功功率[00 00 00] --> 0 kW
				+ "11 12 16" // r5 当前C相有功功率[00 00 00] --> 0 kW
				+ "00 11 12" // r6 当前总无功功率[00 00 00] --> 0 kvar
				+ "00 11 13" // r7 当前A相无功功率[00 00 00] --> 0 kvar
				+ "00 11 14" // r8 当前B相无功功率[00 00 00] --> 0 kvar
				+ "00 11 15" // r9 当前C相无功功率[00 00 00] --> 0 kvar
				+ "23 34" // r10 当前总功率因数[00 10] --> 100 %		(A5:799.9正负)
				+ "23 35" // r11 当前A相功率因数[00 10] --> 100 %
				+ "23 36" // r12 当前B相功率因数[00 10] --> 100 %
				+ "23 37" // r13 当前C相功率因数[00 10] --> 100 %
				+ "01 23" // r14 当前A相电压[58 22] --> 225.8 V	(A7: 999.9)
				+ "01 24" // r15 当前B相电压[00 00] --> 0 V
				+ "01 25" // r16 当前C相电压[00 00] --> 0 V
				+ "01 22 34" // r17 当前A相电流[00 00 00] --> 0 A		(A25:799.999正负)
				+ "01 22 35" // r18 当前B相电流[00 00 00] --> 0 A
				+ "01 22 36" // r19 当前C相电流[00 00 00] --> 0 A
				+ "56 71" // r20 A相电压相位角[00 00]		(A5:799.9正负)
				+ "56 72" // r21 B相电压相位角[00 00]
				+ "56 73" // r22 C相电压相位角[00 00]
				+ "56 74" // r23 A相电流相位角[00 00]
				+ "56 75" // r24 B相电流相位角[00 00]
				+ "56 76" // r25 C相电流相位角[00 00]
				+ "12 34 56 78 90" // r26 当前正向有功总电能示值[00 00 00 00 00] --> 0 kWh		(A14:999999.9999)
				+ "12 34 56 78 91" // r27 当前反向有功总电能示值[00 00 00 00 00] --> 0 kWh
				
				//-------------------------------第3组数据------------------------------------
				+ "20 20 10 02 18" // r1 终端抄表时间[51 20 10 02 18] --> 18-02-10 20:51	(A15:年月日时分,没有秒)
				+ "33 33 33" // r2 当前总有功功率[00 00 00] --> 0 kW	(A9:79.9999正负)
				+ "11 12 14" // r3 当前A相有功功率[00 00 00] --> 0 kW
				+ "11 12 15" // r4 当前B相有功功率[00 00 00] --> 0 kW
				+ "11 12 16" // r5 当前C相有功功率[00 00 00] --> 0 kW
				+ "00 11 12" // r6 当前总无功功率[00 00 00] --> 0 kvar
				+ "00 11 13" // r7 当前A相无功功率[00 00 00] --> 0 kvar
				+ "00 11 14" // r8 当前B相无功功率[00 00 00] --> 0 kvar
				+ "00 11 15" // r9 当前C相无功功率[00 00 00] --> 0 kvar
				+ "23 34" // r10 当前总功率因数[00 10] --> 100 %		(A5:799.9正负)
				+ "23 35" // r11 当前A相功率因数[00 10] --> 100 %
				+ "23 36" // r12 当前B相功率因数[00 10] --> 100 %
				+ "23 37" // r13 当前C相功率因数[00 10] --> 100 %
				+ "01 23" // r14 当前A相电压[58 22] --> 225.8 V	(A7: 999.9)
				+ "01 24" // r15 当前B相电压[00 00] --> 0 V
				+ "01 25" // r16 当前C相电压[00 00] --> 0 V
				+ "01 22 34" // r17 当前A相电流[00 00 00] --> 0 A		(A25:799.999正负)
				+ "01 22 35" // r18 当前B相电流[00 00 00] --> 0 A
				+ "01 22 36" // r19 当前C相电流[00 00 00] --> 0 A
				+ "56 71" // r20 A相电压相位角[00 00]		(A5:799.9正负)
				+ "56 72" // r21 B相电压相位角[00 00]
				+ "56 73" // r22 C相电压相位角[00 00]
				+ "56 74" // r23 A相电流相位角[00 00]
				+ "56 75" // r24 B相电流相位角[00 00]
				+ "56 76" // r25 C相电流相位角[00 00]
				+ "12 34 56 78 90" // r26 当前正向有功总电能示值[00 00 00 00 00] --> 0 kWh	(A14:999999.9999)
				+ "12 34 56 78 91" // r27 当前反向有功总电能示值[00 00 00 00 00] --> 0 kWh
				
				// -------------------------------结尾-------------------------------
				+ "AB" // 校验:[EE]
				+ "16"; // 结束符:[16]
		
		// 2.--------------------------------------------------------------冻结数据----------------------------------------------------------------------------------------------------------------------------
		String rawString2 = ""
				// -------------------------------头部(18字节)-------------------------------
				+ "68" // 起始字符:[68]
				+ "94 01 94 01" // 长度L:[94 01 94 01]-->101(总长度=101+8=109)
				+ "68" // 起始字符:[68]
				+ "CA" // 控制域C [CA]
				+ "01 10" // 行政区划码A1 [0010]-->1000
				+ "01 03" // 终端地址A2 [0100]-->1
				+ "01" // 主站地址和标志A3 [01]
				+ "B1" // 应用层功能码 [B1]-->177
				+ "62" // 帧序列域 [62]
				+ "20 01 1F 00" // 数据单元标识:[01 01 10 00]-->PN,FN(前2位是采集点号, 后2位可以忽略)
				
				//-------------------------------第1组数据------------------------------------
				+ "01 02 18"	// d1	本次冻结数据的日期	(A20: 只有年月日)
				+ "12 34 56 78 91"	// d2	当前正向有功总电能示值[00 00 00 00 00] --------> 0 kWh	(A14: 999999.9999)
				+ "12 34 56 78 92"	// d3	当前费率1正向有功电能示值[00 00 00 00 00] --------> 0 kWh	尖
				+ "12 34 56 78 93"	// d4	当前费率2正向有功电能示值[00 00 00 00 00] --------> 0 kWh	峰
				+ "12 34 56 78 94"	// d5	当前费率3正向有功电能示值[00 00 00 00 00] --------> 0 kWh	谷
				+ "12 34 56 78 95"	// d6	当前费率4正向有功电能示值[00 00 00 00 00] --------> 0 kWh	平
				+ "12 23 34 45"	// d7	当前正向无功（组合无功1）总电能示值[00 00 00 00] --------> 0 kvarh	(A11:999999.99)
				+ "98 76 54 32 11"	// d8	当前反向有功总电能示值[00 00 00 00 00] --------> 0 kWh	(A14: 999999.9999)
				+ "98 76 54 32 12"	// d9	当前费率1反向有功电能示值[00 00 00 00 00] --------> 0 kWh	尖
				+ "98 76 54 32 13"	// d10	当前费率2反向有功电能示值[00 00 00 00 00] --------> 0 kWh	峰
				+ "98 76 54 32 14"	// d11	当前费率3反向有功电能示值[00 00 00 00 00] --------> 0 kWh	谷
				+ "98 76 54 32 15"	// d12	当前费率4反向有功电能示值[00 00 00 00 00] --------> 0 kWh	平
				+ "23 34 45 56"	// d13	当前反向无功（组合无功2）总电能示值[00 00 00 00] --------> 0 kvarh	(A11:999999.99)
				+ "33 12 13"	// d14	当月正向有功总最大需量[00 00 00] --------> 0 kW	(A23: 99.9999)
				+ "33 01 02 02"	// d15	当月正向有功总最大需量发生时间[00 00 00 00] --------> 00-00 00:00	(A17: 月日时分)
				+ "34 12 14"	// d16	当月正向无功总最大需量[00 00 00] --------> 0 kvar	(A23: 99.9999)
				+ "33 11 10 10"	// d17	当月正向无功总最大需量发生时间[00 00 00 00] --------> 00-00 00:00	(A17: 月日时分)
				+ "35 12 15"	// d18	当月反向有功总最大需量[00 00 00] --------> 0 kW	(A23: 99.9999)
				+ "33 12 11 11"	// d19	当月反向有功总最大需量发生时间[00 00 00 00] --------> 00-00 00:00	(A17: 月日时分)
				+ "36 12 16"	// d20	当月反向无功总最大需量[00 00 00] --------> 0 kvar	(A23: 99.9999)
				+ "33 13 12 12"	// d21	当月反向无功总最大需量发生时间[00 00 00 00] --------> 00-00 00:00	(A17: 月日时分)

				// -------------------------------结尾-------------------------------
				+ "AB" // 校验:[EE]
				+ "16"; // 结束符:[16]

				
		byte[] rawBytes = CodecUtils.hexStringWithBlankToBytes(rawString1);
		rawBytes[rawBytes.length - 2] = RawBytesChecker.getCheckSum(rawBytes); // 手动把校验和改成对的
		String base64Str = Base64.encode(rawBytes);
		System.out.println(base64Str);

		// --------------------------------------第2部分:检验---------------------------------------
		int checkResult = RawBytesChecker.check(rawBytes);
		if (checkResult == 0) {
			System.out.println("原始信息格式正确");
		} else {
			System.out.println("原始信息格式检验失败! 错误码:" + checkResult);
		}

		// --------------------------------------第3部分:解析---------------------------------------

		List<AbstractMessage> msgs = RawBytesParser.readMessagesFromBase64Str(base64Str);
		for (AbstractMessage msg : msgs) {
			System.out.println(msg);
		}

	}
}
